<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC
    "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap>
  <typeAlias alias="node" type="com.fost.prop.api.model.Node" />

  <resultMap id="node" class="node">
    <result property="id" column="id" />
    <result property="appId" column="root_id" />
    <result property="name" column="name" />
    <result property="version" column="version" />
    <result property="parentId" column="parent_id" />
    <result property="createAt" column="created_at" />
    <result property="updatedAt" column="updated_at" />    
  </resultMap>

  <insert id="NodeDao.insertNode" parameterClass="node">
    insert into prop_node (id, name, version, parent_id, root_id, created_at, updated_at) values (#id#, #name#, #version#, #parentId#, #appId#, sysdate, sysdate)
  </insert>

  <select id="NodeDao.findNode" parameterClass="int" resultMap="node">
    select id, name, version, parent_id, root_id, created_at, updated_at from prop_node where id = #id#
  </select>

  <update id="NodeDao.updateNode" parameterClass="node">
    update prop_node set name = #name#, version = #version#, parent_id = #parentId#, root_id = #appId#, updated_at = sysdate where id = #id#
  </update>

  <update id="NodeDao.updateVersion" parameterClass="int">
    update prop_node set version = version + 1, updated_at = sysdate where id = #id#
  </update>

  <delete id="NodeDao.deleteNode" parameterClass="int">
    delete from prop_node where id = #id#
  </delete>

  <select id="NodeDao.findNodesByParentId" parameterClass="int" resultMap="node">
    select id, name, version, parent_id, root_id, created_at, updated_at from prop_node where parent_id = #parentId#
  </select>

  <select id="NodeDao.getNodeId" resultClass="int">
    select s_prop_node.nextval from dual
  </select>
</sqlMap>
